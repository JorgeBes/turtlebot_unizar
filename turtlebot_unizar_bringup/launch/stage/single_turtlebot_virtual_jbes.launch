<launch>

<!-- TO-DO: Make it more parametric and customizable-->
<!-- TO-DO: Create configuration files for each node/launch file-->

   <param name="/use_sim_time" value="true"/> 

   <arg name="initial_pose_x" default="6.0"/>
   <arg name="initial_pose_y" default="3.5"/>
   <arg name="initial_pose_a" default="0.0"/>

   <arg name="robotName" default="turtlebot_1" />
   <arg name="base" default="$(optenv TURTLEBOT_BASE kobuki)" />  <!-- create, rhoomba -->
   <arg name="stacks" default="$(optenv TURTLEBOT_STACKS hexagons)" />  <!-- circles, hexagons -->
   <arg name="3d_sensor" default="$(optenv TURTLEBOT_3D_SENSOR hokuyo_top)" />  <!-- kinect, asus_xtion_pro -->

   <!-- Map filepath-->
   <arg name="map_path" default="$(find turtlebot_unizar_bringup)/maps/mapI3A" />

   <!-- Topics and TF IDs-->
   <arg name="map_frame" default="map" />
   <arg name="base_frame" default="base_footprint" />
   <arg name="odom_frame" default="odom" />

   <arg name="laser_topic" default="base_scan" />
   <arg name="odom_topic" default="odom" />

   <!-- Move base config files-->
   <arg name="custom_move_base_launch_file" default="$(find turtlebot_unizar_bringup)/launch/includes/move_base.launch.xml"/>
   <arg name="custom_move_base_param_file" default="$(find turtlebot_unizar_bringup)/param/move_base_config/dummy.yaml"/>


   <!-- STAGE -->    
   <node name="stage_ros" pkg="stage_ros" type="stageros" args="$(arg map_path).world"/>

   <!-- Map server -->
      <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_path).yaml" respawn="false" >
      <param name="frame_id" value="$(arg map_frame)" />
   </node>

   <!-- ROBOT_MODEL -->
   <!-- Convert xacro and put on parameter server -->
   <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot_unizar_description)/robots/kobuki_hexagons_hokuyo_top.urdf.xacro" />

   <!-- Move base -->
   <include file="$(arg custom_move_base_launch_file)">
      <arg name="custom_param_file" value="$(arg custom_move_base_param_file)"/>
      <arg name="laser_topic" value="$(arg laser_topic)" />
      <arg name="odom_topic" value="$(arg odom_topic)" />
      <arg name="odom_frame_id" value ="$(arg odom_frame)" />
      <arg name="base_frame_id" value ="$(arg base_frame)" />
      <arg name="global_frame_id" value="$(arg map_frame)"/>
   </include>

    <!-- AMCL -->
    
   <arg name="custom_amcl_launch_file" default="$(find turtlebot_unizar_bringup)/launch/includes/amcl/amcl_stage.launch.xml"/>   

   <include file="$(arg custom_amcl_launch_file)">
      <arg name="scan_topic" value="$(arg laser_topic)" />
      <arg name="use_map_topic" value="true" />
      <arg name="initial_pose_x" value="$(arg initial_pose_x)" />
      <arg name="initial_pose_y" value="$(arg initial_pose_y)" />
      <arg name="initial_pose_a" value="$(arg initial_pose_a)" />
      <arg name="global_frame_id" value="$(arg map_frame)"/>
   </include>
  

   <!-- Gmapping -->
<!--    <arg name="custom_gmapping_launch_file" default="$(find turtlebot_unizar_bringup)/launch/includes/gmapping/gmapping_stage.launch"/>

   <include file="$(arg custom_gmapping_launch_file)">
      <arg name="scan_topic"  value="$(arg laser_topic)" />
      <arg name="base_frame"  value="$(arg base_frame)"/> 
      <arg name="odom_frame"  value="$(arg odom_frame)"/>
      <arg name="map_frame" value="$(arg map_frame)"/>
   </include> -->


   <!--  RVIZ  -->
   <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_unizar_bringup)/cfg/turtlebot_unizar.rviz"/>

</launch>





